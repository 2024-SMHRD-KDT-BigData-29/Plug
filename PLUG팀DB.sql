-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- TB_USER Table Create SQL
-- 테이블 생성 SQL - TB_USER
CREATE TABLE TB_USER
(
    USER_ID           VARCHAR2(50)     NOT NULL, 
    USER_PW           VARCHAR2(50)     NOT NULL, 
    USER_NICK         VARCHAR2(30)     NOT NULL, 
    USER_BIRTHDATE    VARCHAR2(8)      NOT NULL, 
    USER_PHONE        VARCHAR2(20)     NOT NULL, 
    USER_ACCOUNT      VARCHAR2(20)     NOT NULL, 
    USER_ADDR         VARCHAR2(500)    NOT NULL, 
    USER_ROLE         CHAR(1)          NOT NULL, 
    JOINED_AT         TIMESTAMP        NOT NULL, 
     PRIMARY KEY (USER_ID)
);

-- 테이블 Comment 설정 SQL - TB_USER
COMMENT ON TABLE TB_USER IS '사용자 정보';

-- 컬럼 Comment 설정 SQL - TB_USER.USER_ID
COMMENT ON COLUMN TB_USER.USER_ID IS '사용자 아이디';

-- 컬럼 Comment 설정 SQL - TB_USER.USER_PW
COMMENT ON COLUMN TB_USER.USER_PW IS '사용자 비밀번호';

-- 컬럼 Comment 설정 SQL - TB_USER.USER_NICK
COMMENT ON COLUMN TB_USER.USER_NICK IS '사용자 닉네임';

-- 컬럼 Comment 설정 SQL - TB_USER.USER_BIRTHDATE
COMMENT ON COLUMN TB_USER.USER_BIRTHDATE IS '사용자 생년월일';

-- 컬럼 Comment 설정 SQL - TB_USER.USER_PHONE
COMMENT ON COLUMN TB_USER.USER_PHONE IS '사용자 연락처';

-- 컬럼 Comment 설정 SQL - TB_USER.USER_ACCOUNT
COMMENT ON COLUMN TB_USER.USER_ACCOUNT IS '사용자 계좌번호';

-- 컬럼 Comment 설정 SQL - TB_USER.USER_ADDR
COMMENT ON COLUMN TB_USER.USER_ADDR IS '사용자 주소';

-- 컬럼 Comment 설정 SQL - TB_USER.USER_ROLE
COMMENT ON COLUMN TB_USER.USER_ROLE IS '사용자 구분';

-- 컬럼 Comment 설정 SQL - TB_USER.JOINED_AT
COMMENT ON COLUMN TB_USER.JOINED_AT IS '가입 일자';


-- TB_USED_PHONE Table Create SQL
-- 테이블 생성 SQL - TB_USED_PHONE
CREATE TABLE TB_USED_PHONE
(
    PHONE_IDX      NUMBER(18, 0)     NOT NULL, 
    SELLER_ID      VARCHAR2(50)      NOT NULL, 
    BRAND          VARCHAR2(50)      NOT NULL, 
    MODEL          VARCHAR2(50)      NOT NULL, 
    CAPACITY       VARCHAR2(50)      NOT NULL, 
    COLOR          VARCHAR2(50)      NOT NULL, 
    QUALITY        VARCHAR2(50)      NOT NULL, 
    PRICE          INT               NOT NULL, 
    MEMO           VARCHAR2(300)     NULL, 
    CREATED_AT     TIMESTAMP         NOT NULL, 
    PHONE_IMG1     VARCHAR2(1000)    NULL, 
    PHONE_IMG2     VARCHAR2(1000)    NULL, 
    PHONE_IMG3     VARCHAR2(1000)    NULL, 
    DEAL_STATUS    VARCHAR2(10)      NOT NULL, 
     PRIMARY KEY (PHONE_IDX)
);

-- Auto Increment를 위한 Sequence 추가 SQL - TB_USED_PHONE.PHONE_IDX
CREATE SEQUENCE TB_USED_PHONE_SEQ
START WITH 1
INCREMENT BY 1;

-- Auto Increment를 위한 Trigger 추가 SQL - TB_USED_PHONE.PHONE_IDX
CREATE OR REPLACE TRIGGER TB_USED_PHONE_AI_TRG
BEFORE INSERT ON TB_USED_PHONE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB_USED_PHONE_SEQ.NEXTVAL
    INTO :NEW.PHONE_IDX
    FROM DUAL;
END;

-- DROP TRIGGER TB_USED_PHONE_AI_TRG; 

-- DROP SEQUENCE TB_USED_PHONE_SEQ; 

-- 테이블 Comment 설정 SQL - TB_USED_PHONE
COMMENT ON TABLE TB_USED_PHONE IS '중고폰 정보';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.PHONE_IDX
COMMENT ON COLUMN TB_USED_PHONE.PHONE_IDX IS '폰 식별자';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.SELLER_ID
COMMENT ON COLUMN TB_USED_PHONE.SELLER_ID IS '판매자 아이디';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.BRAND
COMMENT ON COLUMN TB_USED_PHONE.BRAND IS '브랜드';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.MODEL
COMMENT ON COLUMN TB_USED_PHONE.MODEL IS '기종';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.CAPACITY
COMMENT ON COLUMN TB_USED_PHONE.CAPACITY IS '용량';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.COLOR
COMMENT ON COLUMN TB_USED_PHONE.COLOR IS '색상';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.QUALITY
COMMENT ON COLUMN TB_USED_PHONE.QUALITY IS '품질 상태';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.PRICE
COMMENT ON COLUMN TB_USED_PHONE.PRICE IS '가격';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.MEMO
COMMENT ON COLUMN TB_USED_PHONE.MEMO IS '비고';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.CREATED_AT
COMMENT ON COLUMN TB_USED_PHONE.CREATED_AT IS '등록 일자';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.PHONE_IMG1
COMMENT ON COLUMN TB_USED_PHONE.PHONE_IMG1 IS '폰 사진1';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.PHONE_IMG2
COMMENT ON COLUMN TB_USED_PHONE.PHONE_IMG2 IS '폰 사진2';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.PHONE_IMG3
COMMENT ON COLUMN TB_USED_PHONE.PHONE_IMG3 IS '폰 사진3';

-- 컬럼 Comment 설정 SQL - TB_USED_PHONE.DEAL_STATUS
COMMENT ON COLUMN TB_USED_PHONE.DEAL_STATUS IS '판매 상태';

-- Foreign Key 설정 SQL - TB_USED_PHONE(SELLER_ID) -> TB_USER(USER_ID)
ALTER TABLE TB_USED_PHONE
    ADD CONSTRAINT FK_TB_USED_PHONE_SELLER_ID_TB_ FOREIGN KEY (SELLER_ID)
        REFERENCES TB_USER (USER_ID) ;

-- Foreign Key 삭제 SQL - TB_USED_PHONE(SELLER_ID)
-- ALTER TABLE TB_USED_PHONE
-- DROP CONSTRAINT FK_TB_USED_PHONE_SELLER_ID_TB_;


-- TB_CROOM Table Create SQL
-- 테이블 생성 SQL - TB_CROOM
CREATE TABLE TB_CROOM
(
    CROOM_IDX       NUMBER(18, 0)    NOT NULL, 
    CROOM_TITLE     VARCHAR(300)     NOT NULL, 
    CROOM_INFO      VARCHAR(1500)    NOT NULL, 
    CREATED_AT      TIMESTAMP        NOT NULL, 
    USER_ID         VARCHAR2(50)     NOT NULL, 
    CROOM_LIMIT     INT              NOT NULL, 
    CROOM_STATUS    VARCHAR2(10)     NOT NULL, 
    PHONE_IDX       NUMBER(18, 0)    NOT NULL, 
     PRIMARY KEY (CROOM_IDX)
);

-- Auto Increment를 위한 Sequence 추가 SQL - TB_CROOM.CROOM_IDX
CREATE SEQUENCE TB_CROOM_SEQ
START WITH 1
INCREMENT BY 1;

-- Auto Increment를 위한 Trigger 추가 SQL - TB_CROOM.CROOM_IDX
CREATE OR REPLACE TRIGGER TB_CROOM_AI_TRG
BEFORE INSERT ON TB_CROOM 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB_CROOM_SEQ.NEXTVAL
    INTO :NEW.CROOM_IDX
    FROM DUAL;
END;

-- DROP TRIGGER TB_CROOM_AI_TRG; 

-- DROP SEQUENCE TB_CROOM_SEQ; 

-- 테이블 Comment 설정 SQL - TB_CROOM
COMMENT ON TABLE TB_CROOM IS '채팅방';

-- 컬럼 Comment 설정 SQL - TB_CROOM.CROOM_IDX
COMMENT ON COLUMN TB_CROOM.CROOM_IDX IS '방 식별자';

-- 컬럼 Comment 설정 SQL - TB_CROOM.CROOM_TITLE
COMMENT ON COLUMN TB_CROOM.CROOM_TITLE IS '방 제목';

-- 컬럼 Comment 설정 SQL - TB_CROOM.CROOM_INFO
COMMENT ON COLUMN TB_CROOM.CROOM_INFO IS '방 소개';

-- 컬럼 Comment 설정 SQL - TB_CROOM.CREATED_AT
COMMENT ON COLUMN TB_CROOM.CREATED_AT IS '방 개설일자';

-- 컬럼 Comment 설정 SQL - TB_CROOM.USER_ID
COMMENT ON COLUMN TB_CROOM.USER_ID IS '방 개설자';

-- 컬럼 Comment 설정 SQL - TB_CROOM.CROOM_LIMIT
COMMENT ON COLUMN TB_CROOM.CROOM_LIMIT IS '방 인원수';

-- 컬럼 Comment 설정 SQL - TB_CROOM.CROOM_STATUS
COMMENT ON COLUMN TB_CROOM.CROOM_STATUS IS '방 상태';

-- 컬럼 Comment 설정 SQL - TB_CROOM.PHONE_IDX
COMMENT ON COLUMN TB_CROOM.PHONE_IDX IS '폰 식별자';

-- Foreign Key 설정 SQL - TB_CROOM(PHONE_IDX) -> TB_USED_PHONE(PHONE_IDX)
ALTER TABLE TB_CROOM
    ADD CONSTRAINT FK_TB_CROOM_PHONE_IDX_TB_USED_ FOREIGN KEY (PHONE_IDX)
        REFERENCES TB_USED_PHONE (PHONE_IDX) ;

-- Foreign Key 삭제 SQL - TB_CROOM(PHONE_IDX)
-- ALTER TABLE TB_CROOM
-- DROP CONSTRAINT FK_TB_CROOM_PHONE_IDX_TB_USED_;


-- TB_DEAL Table Create SQL
-- 테이블 생성 SQL - TB_DEAL
CREATE TABLE TB_DEAL
(
    DEAL_IDX      NUMBER(18, 0)    NOT NULL, 
    USER_ID       VARCHAR2(50)     NOT NULL, 
    PHONE_IDX     NUMBER(18, 0)    NOT NULL, 
    CREATED_AT    TIMESTAMP        NOT NULL, 
    DEAL_MEMO     VARCHAR2(300)    NOT NULL, 
    PAY_METHOD    VARCHAR2(50)     NOT NULL, 
    PAY_AMOUNT    INT              NOT NULL, 
     PRIMARY KEY (DEAL_IDX)
);

-- Auto Increment를 위한 Sequence 추가 SQL - TB_DEAL.DEAL_IDX
CREATE SEQUENCE TB_DEAL_SEQ
START WITH 1
INCREMENT BY 1;

-- Auto Increment를 위한 Trigger 추가 SQL - TB_DEAL.DEAL_IDX
CREATE OR REPLACE TRIGGER TB_DEAL_AI_TRG
BEFORE INSERT ON TB_DEAL 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB_DEAL_SEQ.NEXTVAL
    INTO :NEW.DEAL_IDX
    FROM DUAL;
END;

-- DROP TRIGGER TB_DEAL_AI_TRG; 

-- DROP SEQUENCE TB_DEAL_SEQ; 

-- 테이블 Comment 설정 SQL - TB_DEAL
COMMENT ON TABLE TB_DEAL IS '거래';

-- 컬럼 Comment 설정 SQL - TB_DEAL.DEAL_IDX
COMMENT ON COLUMN TB_DEAL.DEAL_IDX IS '거래 식별자';

-- 컬럼 Comment 설정 SQL - TB_DEAL.USER_ID
COMMENT ON COLUMN TB_DEAL.USER_ID IS '사용자 아이디';

-- 컬럼 Comment 설정 SQL - TB_DEAL.PHONE_IDX
COMMENT ON COLUMN TB_DEAL.PHONE_IDX IS '폰 식별자';

-- 컬럼 Comment 설정 SQL - TB_DEAL.CREATED_AT
COMMENT ON COLUMN TB_DEAL.CREATED_AT IS '거래 날짜';

-- 컬럼 Comment 설정 SQL - TB_DEAL.DEAL_MEMO
COMMENT ON COLUMN TB_DEAL.DEAL_MEMO IS '거래 메모';

-- 컬럼 Comment 설정 SQL - TB_DEAL.PAY_METHOD
COMMENT ON COLUMN TB_DEAL.PAY_METHOD IS '결제 수단';

-- 컬럼 Comment 설정 SQL - TB_DEAL.PAY_AMOUNT
COMMENT ON COLUMN TB_DEAL.PAY_AMOUNT IS '결제 금액';

-- Foreign Key 설정 SQL - TB_DEAL(PHONE_IDX) -> TB_USED_PHONE(PHONE_IDX)
ALTER TABLE TB_DEAL
    ADD CONSTRAINT FK_TB_DEAL_PHONE_IDX_TB_USED_P FOREIGN KEY (PHONE_IDX)
        REFERENCES TB_USED_PHONE (PHONE_IDX) ;

-- Foreign Key 삭제 SQL - TB_DEAL(PHONE_IDX)
-- ALTER TABLE TB_DEAL
-- DROP CONSTRAINT FK_TB_DEAL_PHONE_IDX_TB_USED_P;

-- Foreign Key 설정 SQL - TB_DEAL(USER_ID) -> TB_USER(USER_ID)
ALTER TABLE TB_DEAL
    ADD CONSTRAINT FK_TB_DEAL_USER_ID_TB_USER_USE FOREIGN KEY (USER_ID)
        REFERENCES TB_USER (USER_ID) ;

-- Foreign Key 삭제 SQL - TB_DEAL(USER_ID)
-- ALTER TABLE TB_DEAL
-- DROP CONSTRAINT FK_TB_DEAL_USER_ID_TB_USER_USE;


-- TB_CHAT Table Create SQL
-- 테이블 생성 SQL - TB_CHAT
CREATE TABLE TB_CHAT
(
    CHAT_IDX         NUMBER(18, 0)     NOT NULL, 
    CROOM_IDX        NUMBER(18, 0)     NOT NULL, 
    CHATTER          VARCHAR(50)       NOT NULL, 
    CHAT_CONTENT     VARCHAR2(2000)    NULL, 
    CHAT_EMOTICON    VARCHAR2(1000)    NULL, 
    CHAT_FILE        VARCHAR2(1000)    NULL, 
    CREATED_AT       TIMESTAMP         NOT NULL, 
     PRIMARY KEY (CHAT_IDX)
);

-- Auto Increment를 위한 Sequence 추가 SQL - TB_CHAT.CHAT_IDX
CREATE SEQUENCE TB_CHAT_SEQ
START WITH 1
INCREMENT BY 1;

-- Auto Increment를 위한 Trigger 추가 SQL - TB_CHAT.CHAT_IDX
CREATE OR REPLACE TRIGGER TB_CHAT_AI_TRG
BEFORE INSERT ON TB_CHAT 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB_CHAT_SEQ.NEXTVAL
    INTO :NEW.CHAT_IDX
    FROM DUAL;
END;

-- DROP TRIGGER TB_CHAT_AI_TRG; 

-- DROP SEQUENCE TB_CHAT_SEQ; 

-- 테이블 Comment 설정 SQL - TB_CHAT
COMMENT ON TABLE TB_CHAT IS '대화';

-- 컬럼 Comment 설정 SQL - TB_CHAT.CHAT_IDX
COMMENT ON COLUMN TB_CHAT.CHAT_IDX IS '대화 식별자';

-- 컬럼 Comment 설정 SQL - TB_CHAT.CROOM_IDX
COMMENT ON COLUMN TB_CHAT.CROOM_IDX IS '방 식별자';

-- 컬럼 Comment 설정 SQL - TB_CHAT.CHATTER
COMMENT ON COLUMN TB_CHAT.CHATTER IS '발화자';

-- 컬럼 Comment 설정 SQL - TB_CHAT.CHAT_CONTENT
COMMENT ON COLUMN TB_CHAT.CHAT_CONTENT IS '발화 내용';

-- 컬럼 Comment 설정 SQL - TB_CHAT.CHAT_EMOTICON
COMMENT ON COLUMN TB_CHAT.CHAT_EMOTICON IS '발화 이모티콘';

-- 컬럼 Comment 설정 SQL - TB_CHAT.CHAT_FILE
COMMENT ON COLUMN TB_CHAT.CHAT_FILE IS '발화 파일';

-- 컬럼 Comment 설정 SQL - TB_CHAT.CREATED_AT
COMMENT ON COLUMN TB_CHAT.CREATED_AT IS '발화 시간';

-- Foreign Key 설정 SQL - TB_CHAT(CROOM_IDX) -> TB_CROOM(CROOM_IDX)
ALTER TABLE TB_CHAT
    ADD CONSTRAINT FK_TB_CHAT_CROOM_IDX_TB_CROOM_ FOREIGN KEY (CROOM_IDX)
        REFERENCES TB_CROOM (CROOM_IDX) ;

-- Foreign Key 삭제 SQL - TB_CHAT(CROOM_IDX)
-- ALTER TABLE TB_CHAT
-- DROP CONSTRAINT FK_TB_CHAT_CROOM_IDX_TB_CROOM_;


-- TB_FAVORITE Table Create SQL
-- 테이블 생성 SQL - TB_FAVORITE
CREATE TABLE TB_FAVORITE
(
    FAV_IDX       NUMBER(18, 0)    NOT NULL, 
    PHONE_IDX     NUMBER(18, 0)    NOT NULL, 
    USER_ID       VARCHAR2(50)     NOT NULL, 
    CREATED_AT    TIMESTAMP        NOT NULL, 
     PRIMARY KEY (FAV_IDX)
);

-- Auto Increment를 위한 Sequence 추가 SQL - TB_FAVORITE.FAV_IDX
CREATE SEQUENCE TB_FAVORITE_SEQ
START WITH 1
INCREMENT BY 1;

-- Auto Increment를 위한 Trigger 추가 SQL - TB_FAVORITE.FAV_IDX
CREATE OR REPLACE TRIGGER TB_FAVORITE_AI_TRG
BEFORE INSERT ON TB_FAVORITE 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT TB_FAVORITE_SEQ.NEXTVAL
    INTO :NEW.FAV_IDX
    FROM DUAL;
END;

-- DROP TRIGGER TB_FAVORITE_AI_TRG; 

-- DROP SEQUENCE TB_FAVORITE_SEQ; 

-- 테이블 Comment 설정 SQL - TB_FAVORITE
COMMENT ON TABLE TB_FAVORITE IS '관심 목록';

-- 컬럼 Comment 설정 SQL - TB_FAVORITE.FAV_IDX
COMMENT ON COLUMN TB_FAVORITE.FAV_IDX IS '관심 식별자';

-- 컬럼 Comment 설정 SQL - TB_FAVORITE.PHONE_IDX
COMMENT ON COLUMN TB_FAVORITE.PHONE_IDX IS '폰 식별자';

-- 컬럼 Comment 설정 SQL - TB_FAVORITE.USER_ID
COMMENT ON COLUMN TB_FAVORITE.USER_ID IS '사용자 아이디';

-- 컬럼 Comment 설정 SQL - TB_FAVORITE.CREATED_AT
COMMENT ON COLUMN TB_FAVORITE.CREATED_AT IS '찜한 날짜';

-- Foreign Key 설정 SQL - TB_FAVORITE(PHONE_IDX) -> TB_USED_PHONE(PHONE_IDX)
ALTER TABLE TB_FAVORITE
    ADD CONSTRAINT FK_TB_FAVORITE_PHONE_IDX_TB_US FOREIGN KEY (PHONE_IDX)
        REFERENCES TB_USED_PHONE (PHONE_IDX) ;

-- Foreign Key 삭제 SQL - TB_FAVORITE(PHONE_IDX)
-- ALTER TABLE TB_FAVORITE
-- DROP CONSTRAINT FK_TB_FAVORITE_PHONE_IDX_TB_US;

-- Foreign Key 설정 SQL - TB_FAVORITE(USER_ID) -> TB_USER(USER_ID)
ALTER TABLE TB_FAVORITE
    ADD CONSTRAINT FK_TB_FAVORITE_USER_ID_TB_USER FOREIGN KEY (USER_ID)
        REFERENCES TB_USER (USER_ID) ;

-- Foreign Key 삭제 SQL - TB_FAVORITE(USER_ID)
-- ALTER TABLE TB_FAVORITE
-- DROP CONSTRAINT FK_TB_FAVORITE_USER_ID_TB_USER;



